name: beans-docker

on:
  pull_request:
    branches: [ "main", "dev" ]
    types:
      - closed

jobs:
  CI-CD:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # gradle caching - 빌드 시간 향상
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: make env.properties
        if: |
          contains(github.ref, 'main') ||
          contains(github.ref, 'dev')
        run: |
          touch env.properties
          echo "${{ secrets.ENV_PROPERTIES }}" > env.properties
        shell: bash

      - name: make application-dev
        if: |
          contains(github.ref, 'main') ||
          contains(github.ref, 'dev')
        run: |
          mkdir -p src/main/resources
          cd ./src/main/resources
          touch ./application-dev.properties
          echo "${{ secrets.APPLICATION_DEV }}" > ./application-dev.properties
        shell: bash

      - name: Build with Gradle
        run: ./gradlew build -x test
      # 현재시간가져오기
      - name: Get current time
        uses: josStorer/get-current-time@v2.0.2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00"

      # docker build & push
      # Dockerfile을 통해 이미지화
      # push to docker hub
      - name: Docker build & push to dev
        #        if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
        if: |
          contains(github.ref, 'main') ||
          contains(github.ref, 'dev') &&
          github.event.pull_request.merged == true
        run: |
          docker login -u ${{ secrets.DOCKER_EMAIL }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/moit . 
          docker push ${{ secrets.DOCKER_USERNAME }}/moit

  beanstalk:
    name: Deploy to EB
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    needs: [ CI-CD ]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get current time
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Use current time
        env:
          TIME: "${{ steps.current-time.outputs.time }}"
        run: echo $TIME

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY }}
          aws_secret_key: ${{ secrets.AWS_SECRET_KEY }}
          application_name: moit-docker
          environment_name: Moit-docker-env
          version_label: docker-${{ steps.current-time.outputs.time }}
          region: ap-northeast-2
          deployment_package: elasticbeanstalk/docker-compose.yml
          wait_for_environment_recovery: 180